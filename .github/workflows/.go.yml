on:
  push:
    branches: [ master ]
  pull_request:
name: test and build
env:
  GOPROXY: "https://proxy.golang.org"
  CI_NO_PYTHON: "true"
jobs:
  test:
    strategy:
      matrix:
        go: [1.13.x, 1.14.x, 1.15.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
        tags: [avx, sse]
        allowfail: [false]
        include:
          - go: tip
            os: ubuntu-latest
            allowfail: true
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allowfail }}
    timeout-minutes: 5
    steps:
    - name: Install Go ${{ matrix.go }} on ${{ matrix.os }}
      if: matrix.go != 'tip'
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
# tempoary hack:
# https://github.com/actions/setup-go/issues/21#issuecomment-565704236
    - name: Install Go ${{ matrix.go }} on ${{ matrix.os }}
      if: matrix.go == 'tip'
      run: |
        git clone --depth=1 https://go.googlesource.com/go $HOME/gotip
        cd $HOME/gotip/src
        ./make.bash
        echo "GOROOT=$HOME/gotip" >> $GITHUB_ENV
        echo "$HOME/gotip/bin" >> $GITHUB_PATH
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run tests
      run: |
        go test ./... -v -race
        go test ./... -race -tags=${{ matrix.tags }}

  coverage:
    env:
      CI_NO_PYTHON: "false"
      PYTHON_COMMAND: python
    strategy:
      matrix:
        tags: [avx, sse]
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.14.x
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'
    - name: Install Pip
      uses: BSFishy/pip-action@v1
      with:
        packages: numpy
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Calc coverage
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin
        go test ./... -v -covermode=atomic -coverprofile=coverage.out
    - name: Convert coverage to lcov
      uses: jandelgado/gcov2lcov-action@v1.0.0
      with:
          infile: coverage.out
          outfile: coverage.lcov
    - name: Coveralls
      uses: coverallsapp/github-action@v1.0.1
      with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov

  build:
    strategy:
      matrix:
        go: [1.13, 1.14]
        goos: [linux, darwin]
        goarch: [amd64, arm]
        exclude:
          # windows/386 and darwin/386 seems useless
          - goarch: "arm"
            goos: darwin
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - name: Install Go ${{ matrix.go }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: build
      run: go build .
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
